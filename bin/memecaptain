#!/usr/bin/env ruby

require 'mime/types'
require 'open-uri'
require 'optparse'

require 'meme_captain'

options = {}

option_parser = OptionParser.new do |opts|
  opts.banner = <<-eos
Usage: memecaptain INPUT_IMAGE [OPTIONS]

INPUT_IMAGE can be a file path, URL or - for stdin.

eos

  opts.on('-t', '--top-text TEXT', 'top text') do |text|
    options[:top_text] = text
  end

  opts.on('-b', '--bottom-text TEXT', 'bottom text') do |text|
    options[:bottom_text] = text
  end

  opts.on('-o', '--output PATH', 'output path (- for stdout)') do |path|
    options[:output] = path
  end

  opts.on('-f', '--font FONT', 'font') do |font|
    options[:font] = font
  end
end

option_parser.parse!

unless ARGV.empty?
  input = ARGV[0]

  input_io = if input == '-'
    $stdin
  else
    open input, 'rb'
  end

  meme_options = options.select do |k,v|
    [
      :font,
    ].include? k
  end

  meme_options = Hash[meme_options]  if meme_options.is_a?(Array)

  output_image = MemeCaptain.meme_top_bottom(
    input_io, options[:top_text], options[:bottom_text], meme_options)

  input_io.close

  output = if options[:output]
    options[:output] == '-' ? $stdout : options[:output]
  else
    "meme.#{MIME::Types[output_image.mime_type][0].extensions[0]}"
  end

  output_image.write(output) { self.quality = 100 }
else
  $stderr.puts option_parser
  exit 1
end
